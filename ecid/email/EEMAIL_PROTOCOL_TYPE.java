/*
 * ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 * 
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * -----------------------------------------------------------------------------
 */

package com.android.server.ecid.email;

public enum EEMAIL_PROTOCOL_TYPE {
		
    //LGSI_CHANGE_PROTOCOL_BEGIN Shrey Chaturvedi 4 November 2013
    eEMAIL_PROTOCOL_TYPE_UNKNOWN("unknown"), 
    eEMAIL_PROTOCOL_TYPE_SMTP("smtp"), 
    eEMAIL_PROTOCOL_TYPE_POP3("pop3"), 
    eEMAIL_PROTOCOL_TYPE_IMAP4("imap"),
   //LGSI_PROTOCOL_CHANGE_BEGIN janagraj.veluchamy 2013-12-18 -EAS Account Setup flow 
    eEMAIL_PROTOCOL_TYPE_EAS("eas");
   //LGSI_PROTOCOL_CHANGE_END janagraj.veluchamy 2013-12-18 
    //LGSI_CHANGE_PROTOCOL_END Shrey Chaturvedi 4 November 2013

    public final int swigValue() {
        return swigValue;
    }

    public static EEMAIL_PROTOCOL_TYPE swigToEnum(int swigValue) {
        EEMAIL_PROTOCOL_TYPE[] swigValues = EEMAIL_PROTOCOL_TYPE.class.getEnumConstants();

        //[2012.03.23][wooky] WBT 329383
        if (swigValues == null) {
            throw new IllegalStateException("swigValues is null");
        }

        if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
            return swigValues[swigValue];

        for (EEMAIL_PROTOCOL_TYPE swigEnum : swigValues)
            if (swigEnum.swigValue == swigValue)
                return swigEnum;
        throw new IllegalArgumentException("No enum " + EEMAIL_PROTOCOL_TYPE.class + " with value " + swigValue);
    }

	// LGSI_CHANGE_PROTOCOL_BEGIN Shrey Chaturvedi 4 November 2013
	// Function is added to get the specific value from enum corresponding to
	// string
	public static EEMAIL_PROTOCOL_TYPE swigToEnum(String swigValue) {

		if ("smtp".equals(swigValue)) {
			return eEMAIL_PROTOCOL_TYPE_SMTP;
		}
		if ("imap".equals(swigValue)) {
			return eEMAIL_PROTOCOL_TYPE_IMAP4;
		}
		if ("pop3".equals(swigValue)) {
			return eEMAIL_PROTOCOL_TYPE_POP3;
		}
	   //LGSI_PROTOCOL_CHANGE_BEGIN janagraj.veluchamy 2013-12-18 -EAS Account Setup flow
		if ("eas".equals(swigValue)) {
                        return eEMAIL_PROTOCOL_TYPE_EAS;
		}
	  //LGSI_PROTOCOL_CHANGE_END janagraj.veluchamy 2013-12-18 
		return eEMAIL_PROTOCOL_TYPE_UNKNOWN;
	}

	public static String enumToString(EEMAIL_PROTOCOL_TYPE enValue) {

		if (eEMAIL_PROTOCOL_TYPE_SMTP.equals(enValue)) {
			return "smtp";
		}
		if (eEMAIL_PROTOCOL_TYPE_IMAP4.equals(enValue)) {
			return "imap";
		}
		if (eEMAIL_PROTOCOL_TYPE_POP3.equals(enValue)) {
			return "pop3";
		}
	  //LGSI_PROTOCOL_CHANGE_BEGIN janagraj.veluchamy 2013-12-18 -EAS Account Setup flow
		if (eEMAIL_PROTOCOL_TYPE_EAS.equals(enValue)) {
                        return "eas";
		}
	  //LGSI_PROTOCOL_CHANGE_END janagraj.veluchamy 2013-12-18 
		return "unknown";

	}

	// LGSI_CHANGE_PROTOCOL_END Shrey Chaturvedi 4 November 2013
	@SuppressWarnings("unused")
	private EEMAIL_PROTOCOL_TYPE() {
		this.swigValue = SwigNext.next++;
	}

    @SuppressWarnings("unused")
    private EEMAIL_PROTOCOL_TYPE(int swigValue) {
        this.swigValue = swigValue;
        SwigNext.next = swigValue + 1;
    }

    @SuppressWarnings("unused")
    private EEMAIL_PROTOCOL_TYPE(EEMAIL_PROTOCOL_TYPE swigEnum) {
        this.swigValue = swigEnum.swigValue;
        SwigNext.next = this.swigValue + 1;
    }
    
    //LGSI_CHANGE_PROTOCOL_BEGIN Shrey Chaturvedi 4 November 2013
    private EEMAIL_PROTOCOL_TYPE(String svalue) {
    	
    	this.swigValue = 0;
    }
    //LGSI_CHANGE_PROTOCOL_END Shrey Chaturvedi 4 November 2013

    private final int swigValue;

    private static class SwigNext {
        private static int next = 0;
    }
}
